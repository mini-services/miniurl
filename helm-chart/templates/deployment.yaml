kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ include "miniurl.appName" . }}-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    app: {{ include "miniurl.appName" . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ include "miniurl.appName" . }}
  template:
    metadata:
      labels:
        app: {{ include "miniurl.appName" . }}
      annotations:
        version: {{ .Chart.Version }}
    spec:
      containers:
        - name: {{ include "miniurl.appName" . }}
          image: {{ required "image is required" .Values.image }}
          imagePullPolicy: {{ .Values.imagePullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.port }}
          env:
            - name: BASE_REDIRECT_URL
              value: {{ required "baseRedirectUrl is required" .Values.baseRedirectUrl }}
            - name: API_PREFIX
              value: {{ (required "apiPrefix is required" .Values.apiPrefix) | quote }}
            - name: URL_MATCH_PATTERN
              value: {{ .Values.url.matchPattern | quote }}
            - name: URL_LIFETIME
              value: {{ .Values.url.lifetime }}
            - name: PORT
              value: {{ .Values.port | default 80 | quote }}
            # Storage driver
            - name: STORAGE_DRIVER
              value: {{ required "storage.driver is required" .Values.storage.driver }}
            {{ if eq .Values.storage.driver "Relational" }}
            - name: RELATIONAL_STORAGE_CLIENT
              value: {{ .Values.storage.deploy | ternary "postgres" .Values.storage.relationalConfig.client }}
            - name: RELATIONAL_STORAGE_HOST
              value: {{ .Values.storage.deploy | ternary (print .Release.Name "-postgresql") .Values.storage.relationalConfig.host }}
            - name: RELATIONAL_STORAGE_USER
              value: {{ .Values.storage.deploy | ternary "postgres" .Values.storage.relationalConfig.user }}
            - name: RELATIONAL_STORAGE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "miniurl.storageSecretName" . }}
                  key: {{ .Values.storage.deploy | ternary "postgresql-password" "password" }}
            - name: RELATIONAL_STORAGE_DATABASE
              value: {{ .Values.storage.deploy | ternary "postgres" .Values.storage.relationalConfig.database }}
            {{ end }}
            # Auth driver
            - name: AUTH_DRIVER
              value: {{ required "auth.driver is required" .Values.auth.driver }}
            {{ if eq .Values.auth.driver "BearerToken" }}
            - name: AUTH_BEARER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "miniurl.appName" . }}-auth-secret
                  key: token
            {{ end }}
          livenessProbe:
            httpGet:
              path: /healthz
              port: {{ .Values.port | default 80 }}
